name: foodgram_workflow

on:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend_diplom:${{ secrets.IMAGE_TAG }}

      - name: Push frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:${{ secrets.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd foodgram
          touch .env
          echo DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} >> .env
          echo IMAGE_TAG=${{ secrets.IMAGE_TAG }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          
          sudo docker-compose pull
          sudo docker-compose stop
          sudo docker-compose rm backend
          sudo docker-compose rm frontend
          sudo docker-compose up -d
